{
	"info": {
		"_postman_id": "6ecad576-143c-4cd5-a80c-3e3d2932dd9f",
		"name": "paylite_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "42642368"
	},
	"item": [
		{
			"name": "/api/v1/payments/pl_b620d63536284ca0be89982ecb73b5dd",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "test-api-key",
						"type": "text"
					}
				],
				"url": "http://localhost:8080/api/v1/payments/pl_b620d63536284ca0be89982ecb73b5dd"
			},
			"response": []
		},
		{
			"name": "/api/v1/payments",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-API-Key",
						"value": "test-api-key",
						"type": "text"
					},
					{
						"key": "Idempotency-Key",
						"value": "540AA187-D623-4687-933A-181F0D7B4B03",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 1999,\n    \"currency\": \"NGN\",\n    \"customerEmail\": \"user@example.com\",\n    \"reference\": \"INV-2025-0001\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/api/v1/payments"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/api/v1/webhooks/psp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"--- Debugging Pre-request Script ---\");",
							" try {",
							"    // 1. Log the body",
							"     const requestBody = pm.request.body.raw;",
							"     console.log(\"Raw Request Body:\", requestBody);",
							"     if (typeof requestBody !== 'string') {",
							"         console.error(\"ERROR: Request body is not a raw string. Please check the Body tab.\");",
							"     }",
							" ",
							"     // 2. Log the secret",
							"     const webhookSecret = pm.collectionVariables.get(\"webhookSecret\");",
							"     console.log(\"Webhook Secret from Collection:\", webhookSecret);",
							"     if (typeof webhookSecret !== 'string') {",
							"         console.error(\"ERROR: 'webhookSecret' is not a string. Please check your collection variables.\");",
							"     }",
							" ",
							"     // 3. Calculate signature",
							"     const signature = CryptoJS.HmacSHA256(requestBody, webhookSecret).toString(CryptoJS.enc.Hex);",
							"     console.log(\"Signature Calculated Successfully:\", signature);",
							"     ",
							"     // 4. Set the variable",
							"     pm.collectionVariables.set(\"pspSignature\", signature);",
							"     console.log(\"Variable 'pspSignature' was set.\");",
							" ",
							" } catch (e) {",
							"     console.error(\"An error occurred during signature calculation:\", e);",
							" }",
							" ",
							" console.log(\"--- End of Script ---\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-PSP-Signature",
						"value": "{{pspSignature}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"paymentId\" :   \"pl_b620d63536284ca0be89982ecb73b5dd\",\n    \"event\"     :   \"payment.succeeded\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/api/v1/webhooks/psp"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "webhookSecret",
			"value": "super-secret-webhook-key",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "pspSignature",
			"value": ""
		}
	]
}